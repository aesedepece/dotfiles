#+STARTUP: showall
* Git
:PROPERTIES:
:tangle: ~/.gitconfig-public
:END:

Keep sensitive that in =.gitconfig= and include this with:
#+BEGIN_SRC gitconfig :tangle no
  [include]
      path = ~/.gitconfig-public
#+END_SRC

** Editor
#+BEGIN_SRC gitconfig
  [core]
          editor = emacs
          filemode = false
          autocrlf = input
#+END_SRC

** Coloring
#+BEGIN_SRC gitconfig
  [color]
          ui = auto
#+END_SRC

** Aliases
#+BEGIN_SRC gitconfig
  [alias]
          st = status -sb
          ci = commit
          br = branch
          co = checkout
          df = diff
          dfs = diff --staged
          lg = log --decorate --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
          lga = lg --all
          ls = ls-files
          mg = merge --no-ff

          root = rev-parse --show-toplevel
          pushall = push --recurse-submodules=on-demand
          contributors = "! source ~/.git-helpers && git_contributors"
          clean-branches = "! source ~/.git-helpers && git_clean_branches"
#+END_SRC

** Push
#+BEGIN_SRC gitconfig
  [push]
          default = tracking
#+END_SRC

* Helper functions
:PROPERTIES:
:tangle: ~/.git-helpers
:END:
** Pretty log
#+BEGIN_SRC sh
  function pretty_git_log {
      git log --graph --pretty="tformat:$FORMAT" $* | column -t -s "$SEP" | less -FXRS
  }
#+END_SRC

** Show contributors
#+BEGIN_SRC sh
  function git_contributors {
      git shortlog -se | awk '{ print $2 $3 }' | uniq
  }
#+END_SRC

** Clean already merged branches
Removes local branches which have already been merged into the current HEAD.
#+BEGIN_SRC sh
    function git_clean_branches {
        branches=`git branch --merged | grep -v "\* "`
        if [ -n "$branches" ]; then
            echo $branches | xargs -n 1 git branch -d
        fi
    }
#+END_SRC
