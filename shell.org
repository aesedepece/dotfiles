* Shell
I use [[http://www.zsh.org/][Zsh]] in conjunction with the [[https://github.com/robbyrussell/oh-my-zsh][oh-my-zsh]] framework.

** Setup
Install oh-my-zsh the manual way:

#+BEGIN_SRC sh
  if [ ! -d ~/.oh-my-zsh ]; then
      git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
  fi
#+END_SRC

#+RESULTS:

** Zsh configuration
*** Theme
#+BEGIN_SRC sh :tangle ~/.zshrc
  ZSH_THEME="personal"
#+END_SRC
**** Custom theme
:PROPERTIES:
:tangle: ~/.oh-my-zsh/themes/personal.zsh-theme
:mkdirp: yes
:END:

Based on Geoffrey Grosenbach's peepcode zsh theme from
https://github.com/topfunky/zsh-simple

#+BEGIN_SRC sh
  PROMPT='%{$fg[green]%}%c$(git_prompt_info)$ % %{$reset_color%}'

  ZSH_THEME_GIT_PROMPT_PREFIX="("
  ZSH_THEME_GIT_PROMPT_SUFFIX=""
  ZSH_THEME_GIT_PROMPT_DIRTY="*)"
  ZSH_THEME_GIT_PROMPT_CLEAN=")"
#+END_SRC
*** Plugins
#+BEGIN_SRC sh :tangle ~/.zshrc
  plugins=(git themes)
#+END_SRC

*** Launch
Path to my oh-my-zsh framework:
#+BEGIN_SRC sh :tangle ~/.zshrc
  export ZSH=$HOME/.oh-my-zsh
  source $ZSH/oh-my-zsh.sh
#+END_SRC

** Paths configuration
*** PATH
#+BEGIN_SRC sh :tangle ~/.zshrc
  export PATH=~/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH
#+END_SRC

*** INFOPATH
#+BEGIN_SRC sh :tangle ~/.zshrc
  export INFOPATH=~/repos-readonly/emacs/info:~/.local/share/info:$INFOPATH
#+END_SRC

** Editor
[[https://www.gnu.org/software/emacs/][Emacs]] as my editor:
#+BEGIN_SRC sh :tangle ~/.zshrc
  export EDITOR=emacs
#+END_SRC

Add Cask bin directory to PATH:
#+BEGIN_SRC sh :tangle ~/.zshrc
  export PATH=$PATH:~/.cask/bin
#+END_SRC

Open a file in an Emacs in daemon mode:
#+BEGIN_SRC sh :tangle ~/.zshrc
  alias em="emacsclient -n -a ''"
#+END_SRC

Open a manual inside an Emacs in daemon mode:
#+BEGIN_SRC sh :tangle ~/.zshrc
  function eman {
      emacsclient -e "(man \"$@\")";
  }
#+END_SRC

** SSH
Launch SSH Agent:
#+BEGIN_SRC sh :tangle ~/.zshrc
  envoy -t ssh-agent
  source <(envoy -p)
#+END_SRC

** LESS
Display more information in less statusline:
#+BEGIN_SRC sh :tangle ~/.zshrc
  export LESS='-erX -i-P%f (%i/%m) Line %lt/%L'
#+END_SRC

** Git
#+BEGIN_SRC sh :tangle ~/.zshrc
  HASH="%C(yellow)%h%C(reset)"
  RELATIVE_TIME="%C(green)%ar%C(reset)"
  AUTHOR="%C(bold blue)%an%C(reset)"
  REFS="%C(red)%d%C(reset)"
  SUBJECT="%s"
  SEP="{"
  FORMAT="$HASH$SEP$RELATIVE_TIME$SEP$AUTHOR$SEP$REFS $SUBJECT"
  
  function pretty_git_log() {
    git log --graph --pretty="tformat:$FORMAT" $* |
    column -t -s "$SEP" |
    less -FXRS
  }
  
  function git_diff_files() {
    git diff | grep "+++ b/" | sed "s/b\///g" | cut -d " " -f 2
  }
  
  function git_contributors() {
    git shortlog -se | awk '{ print $2 $3 }'
  }
#+END_SRC

** Environment
#+BEGIN_SRC sh :tangle ~/.zshrc
  export TERM='xterm-256color'
  export LANG=en_US.UTF-8
#+END_SRC

** Functions
#+BEGIN_SRC sh :tangle ~/.zshrc
  # Simple fuzzy finder
  function s {
      query="`echo $1 | fold -w1 | paste -s -d'.' | fold -w2 | paste -s -d'*'`.*"
      ag -g "$query" | grep -v "py[co]$"
  }
  
  function off {
      when=${1:-now}
      sudo shutdown -h $when
  }
  
  function restart {
      sudo reboot
  }
  
  function trunk {
      echo -n '' | tee "$@" 2> /dev/null
  }
#+END_SRC


